package com.hospital.register.bean;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class BonusDetailExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table t_bonus_detail
	 * @mbg.generated
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table t_bonus_detail
	 * @mbg.generated
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table t_bonus_detail
	 * @mbg.generated
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_bonus_detail
	 * @mbg.generated
	 */
	public BonusDetailExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_bonus_detail
	 * @mbg.generated
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_bonus_detail
	 * @mbg.generated
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_bonus_detail
	 * @mbg.generated
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_bonus_detail
	 * @mbg.generated
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_bonus_detail
	 * @mbg.generated
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_bonus_detail
	 * @mbg.generated
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_bonus_detail
	 * @mbg.generated
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_bonus_detail
	 * @mbg.generated
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_bonus_detail
	 * @mbg.generated
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_bonus_detail
	 * @mbg.generated
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table t_bonus_detail
	 * @mbg.generated
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andBonusIdIsNull() {
			addCriterion("bonus_id is null");
			return (Criteria) this;
		}

		public Criteria andBonusIdIsNotNull() {
			addCriterion("bonus_id is not null");
			return (Criteria) this;
		}

		public Criteria andBonusIdEqualTo(Integer value) {
			addCriterion("bonus_id =", value, "bonusId");
			return (Criteria) this;
		}

		public Criteria andBonusIdNotEqualTo(Integer value) {
			addCriterion("bonus_id <>", value, "bonusId");
			return (Criteria) this;
		}

		public Criteria andBonusIdGreaterThan(Integer value) {
			addCriterion("bonus_id >", value, "bonusId");
			return (Criteria) this;
		}

		public Criteria andBonusIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("bonus_id >=", value, "bonusId");
			return (Criteria) this;
		}

		public Criteria andBonusIdLessThan(Integer value) {
			addCriterion("bonus_id <", value, "bonusId");
			return (Criteria) this;
		}

		public Criteria andBonusIdLessThanOrEqualTo(Integer value) {
			addCriterion("bonus_id <=", value, "bonusId");
			return (Criteria) this;
		}

		public Criteria andBonusIdIn(List<Integer> values) {
			addCriterion("bonus_id in", values, "bonusId");
			return (Criteria) this;
		}

		public Criteria andBonusIdNotIn(List<Integer> values) {
			addCriterion("bonus_id not in", values, "bonusId");
			return (Criteria) this;
		}

		public Criteria andBonusIdBetween(Integer value1, Integer value2) {
			addCriterion("bonus_id between", value1, value2, "bonusId");
			return (Criteria) this;
		}

		public Criteria andBonusIdNotBetween(Integer value1, Integer value2) {
			addCriterion("bonus_id not between", value1, value2, "bonusId");
			return (Criteria) this;
		}

		public Criteria andSubscriptionIdIsNull() {
			addCriterion("subscription_id is null");
			return (Criteria) this;
		}

		public Criteria andSubscriptionIdIsNotNull() {
			addCriterion("subscription_id is not null");
			return (Criteria) this;
		}

		public Criteria andSubscriptionIdEqualTo(Integer value) {
			addCriterion("subscription_id =", value, "subscriptionId");
			return (Criteria) this;
		}

		public Criteria andSubscriptionIdNotEqualTo(Integer value) {
			addCriterion("subscription_id <>", value, "subscriptionId");
			return (Criteria) this;
		}

		public Criteria andSubscriptionIdGreaterThan(Integer value) {
			addCriterion("subscription_id >", value, "subscriptionId");
			return (Criteria) this;
		}

		public Criteria andSubscriptionIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("subscription_id >=", value, "subscriptionId");
			return (Criteria) this;
		}

		public Criteria andSubscriptionIdLessThan(Integer value) {
			addCriterion("subscription_id <", value, "subscriptionId");
			return (Criteria) this;
		}

		public Criteria andSubscriptionIdLessThanOrEqualTo(Integer value) {
			addCriterion("subscription_id <=", value, "subscriptionId");
			return (Criteria) this;
		}

		public Criteria andSubscriptionIdIn(List<Integer> values) {
			addCriterion("subscription_id in", values, "subscriptionId");
			return (Criteria) this;
		}

		public Criteria andSubscriptionIdNotIn(List<Integer> values) {
			addCriterion("subscription_id not in", values, "subscriptionId");
			return (Criteria) this;
		}

		public Criteria andSubscriptionIdBetween(Integer value1, Integer value2) {
			addCriterion("subscription_id between", value1, value2, "subscriptionId");
			return (Criteria) this;
		}

		public Criteria andSubscriptionIdNotBetween(Integer value1, Integer value2) {
			addCriterion("subscription_id not between", value1, value2, "subscriptionId");
			return (Criteria) this;
		}

		public Criteria andSettleAmountIsNull() {
			addCriterion("settle_amount is null");
			return (Criteria) this;
		}

		public Criteria andSettleAmountIsNotNull() {
			addCriterion("settle_amount is not null");
			return (Criteria) this;
		}

		public Criteria andSettleAmountEqualTo(Long value) {
			addCriterion("settle_amount =", value, "settleAmount");
			return (Criteria) this;
		}

		public Criteria andSettleAmountNotEqualTo(Long value) {
			addCriterion("settle_amount <>", value, "settleAmount");
			return (Criteria) this;
		}

		public Criteria andSettleAmountGreaterThan(Long value) {
			addCriterion("settle_amount >", value, "settleAmount");
			return (Criteria) this;
		}

		public Criteria andSettleAmountGreaterThanOrEqualTo(Long value) {
			addCriterion("settle_amount >=", value, "settleAmount");
			return (Criteria) this;
		}

		public Criteria andSettleAmountLessThan(Long value) {
			addCriterion("settle_amount <", value, "settleAmount");
			return (Criteria) this;
		}

		public Criteria andSettleAmountLessThanOrEqualTo(Long value) {
			addCriterion("settle_amount <=", value, "settleAmount");
			return (Criteria) this;
		}

		public Criteria andSettleAmountIn(List<Long> values) {
			addCriterion("settle_amount in", values, "settleAmount");
			return (Criteria) this;
		}

		public Criteria andSettleAmountNotIn(List<Long> values) {
			addCriterion("settle_amount not in", values, "settleAmount");
			return (Criteria) this;
		}

		public Criteria andSettleAmountBetween(Long value1, Long value2) {
			addCriterion("settle_amount between", value1, value2, "settleAmount");
			return (Criteria) this;
		}

		public Criteria andSettleAmountNotBetween(Long value1, Long value2) {
			addCriterion("settle_amount not between", value1, value2, "settleAmount");
			return (Criteria) this;
		}

		public Criteria andSettleModeIsNull() {
			addCriterion("settle_mode is null");
			return (Criteria) this;
		}

		public Criteria andSettleModeIsNotNull() {
			addCriterion("settle_mode is not null");
			return (Criteria) this;
		}

		public Criteria andSettleModeEqualTo(Integer value) {
			addCriterion("settle_mode =", value, "settleMode");
			return (Criteria) this;
		}

		public Criteria andSettleModeNotEqualTo(Integer value) {
			addCriterion("settle_mode <>", value, "settleMode");
			return (Criteria) this;
		}

		public Criteria andSettleModeGreaterThan(Integer value) {
			addCriterion("settle_mode >", value, "settleMode");
			return (Criteria) this;
		}

		public Criteria andSettleModeGreaterThanOrEqualTo(Integer value) {
			addCriterion("settle_mode >=", value, "settleMode");
			return (Criteria) this;
		}

		public Criteria andSettleModeLessThan(Integer value) {
			addCriterion("settle_mode <", value, "settleMode");
			return (Criteria) this;
		}

		public Criteria andSettleModeLessThanOrEqualTo(Integer value) {
			addCriterion("settle_mode <=", value, "settleMode");
			return (Criteria) this;
		}

		public Criteria andSettleModeIn(List<Integer> values) {
			addCriterion("settle_mode in", values, "settleMode");
			return (Criteria) this;
		}

		public Criteria andSettleModeNotIn(List<Integer> values) {
			addCriterion("settle_mode not in", values, "settleMode");
			return (Criteria) this;
		}

		public Criteria andSettleModeBetween(Integer value1, Integer value2) {
			addCriterion("settle_mode between", value1, value2, "settleMode");
			return (Criteria) this;
		}

		public Criteria andSettleModeNotBetween(Integer value1, Integer value2) {
			addCriterion("settle_mode not between", value1, value2, "settleMode");
			return (Criteria) this;
		}

		public Criteria andBonusPointsIsNull() {
			addCriterion("bonus_points is null");
			return (Criteria) this;
		}

		public Criteria andBonusPointsIsNotNull() {
			addCriterion("bonus_points is not null");
			return (Criteria) this;
		}

		public Criteria andBonusPointsEqualTo(Integer value) {
			addCriterion("bonus_points =", value, "bonusPoints");
			return (Criteria) this;
		}

		public Criteria andBonusPointsNotEqualTo(Integer value) {
			addCriterion("bonus_points <>", value, "bonusPoints");
			return (Criteria) this;
		}

		public Criteria andBonusPointsGreaterThan(Integer value) {
			addCriterion("bonus_points >", value, "bonusPoints");
			return (Criteria) this;
		}

		public Criteria andBonusPointsGreaterThanOrEqualTo(Integer value) {
			addCriterion("bonus_points >=", value, "bonusPoints");
			return (Criteria) this;
		}

		public Criteria andBonusPointsLessThan(Integer value) {
			addCriterion("bonus_points <", value, "bonusPoints");
			return (Criteria) this;
		}

		public Criteria andBonusPointsLessThanOrEqualTo(Integer value) {
			addCriterion("bonus_points <=", value, "bonusPoints");
			return (Criteria) this;
		}

		public Criteria andBonusPointsIn(List<Integer> values) {
			addCriterion("bonus_points in", values, "bonusPoints");
			return (Criteria) this;
		}

		public Criteria andBonusPointsNotIn(List<Integer> values) {
			addCriterion("bonus_points not in", values, "bonusPoints");
			return (Criteria) this;
		}

		public Criteria andBonusPointsBetween(Integer value1, Integer value2) {
			addCriterion("bonus_points between", value1, value2, "bonusPoints");
			return (Criteria) this;
		}

		public Criteria andBonusPointsNotBetween(Integer value1, Integer value2) {
			addCriterion("bonus_points not between", value1, value2, "bonusPoints");
			return (Criteria) this;
		}

		public Criteria andCompleteTimeIsNull() {
			addCriterion("complete_time is null");
			return (Criteria) this;
		}

		public Criteria andCompleteTimeIsNotNull() {
			addCriterion("complete_time is not null");
			return (Criteria) this;
		}

		public Criteria andCompleteTimeEqualTo(Date value) {
			addCriterion("complete_time =", value, "completeTime");
			return (Criteria) this;
		}

		public Criteria andCompleteTimeNotEqualTo(Date value) {
			addCriterion("complete_time <>", value, "completeTime");
			return (Criteria) this;
		}

		public Criteria andCompleteTimeGreaterThan(Date value) {
			addCriterion("complete_time >", value, "completeTime");
			return (Criteria) this;
		}

		public Criteria andCompleteTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("complete_time >=", value, "completeTime");
			return (Criteria) this;
		}

		public Criteria andCompleteTimeLessThan(Date value) {
			addCriterion("complete_time <", value, "completeTime");
			return (Criteria) this;
		}

		public Criteria andCompleteTimeLessThanOrEqualTo(Date value) {
			addCriterion("complete_time <=", value, "completeTime");
			return (Criteria) this;
		}

		public Criteria andCompleteTimeIn(List<Date> values) {
			addCriterion("complete_time in", values, "completeTime");
			return (Criteria) this;
		}

		public Criteria andCompleteTimeNotIn(List<Date> values) {
			addCriterion("complete_time not in", values, "completeTime");
			return (Criteria) this;
		}

		public Criteria andCompleteTimeBetween(Date value1, Date value2) {
			addCriterion("complete_time between", value1, value2, "completeTime");
			return (Criteria) this;
		}

		public Criteria andCompleteTimeNotBetween(Date value1, Date value2) {
			addCriterion("complete_time not between", value1, value2, "completeTime");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table t_bonus_detail
	 * @mbg.generated
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_bonus_detail
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}