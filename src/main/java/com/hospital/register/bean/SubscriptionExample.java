package com.hospital.register.bean;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class SubscriptionExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table t_subscription
	 * @mbg.generated
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table t_subscription
	 * @mbg.generated
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table t_subscription
	 * @mbg.generated
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_subscription
	 * @mbg.generated
	 */
	public SubscriptionExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_subscription
	 * @mbg.generated
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_subscription
	 * @mbg.generated
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_subscription
	 * @mbg.generated
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_subscription
	 * @mbg.generated
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_subscription
	 * @mbg.generated
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_subscription
	 * @mbg.generated
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_subscription
	 * @mbg.generated
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_subscription
	 * @mbg.generated
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_subscription
	 * @mbg.generated
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_subscription
	 * @mbg.generated
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table t_subscription
	 * @mbg.generated
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		protected void addCriterionForJDBCTime(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Time(value.getTime()), property);
		}

		protected void addCriterionForJDBCTime(String condition, List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Time> timeList = new ArrayList<java.sql.Time>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				timeList.add(new java.sql.Time(iter.next().getTime()));
			}
			addCriterion(condition, timeList, property);
		}

		protected void addCriterionForJDBCTime(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Time(value1.getTime()), new java.sql.Time(value2.getTime()), property);
		}

		public Criteria andSubscriptionIdIsNull() {
			addCriterion("subscription_id is null");
			return (Criteria) this;
		}

		public Criteria andSubscriptionIdIsNotNull() {
			addCriterion("subscription_id is not null");
			return (Criteria) this;
		}

		public Criteria andSubscriptionIdEqualTo(Integer value) {
			addCriterion("subscription_id =", value, "subscriptionId");
			return (Criteria) this;
		}

		public Criteria andSubscriptionIdNotEqualTo(Integer value) {
			addCriterion("subscription_id <>", value, "subscriptionId");
			return (Criteria) this;
		}

		public Criteria andSubscriptionIdGreaterThan(Integer value) {
			addCriterion("subscription_id >", value, "subscriptionId");
			return (Criteria) this;
		}

		public Criteria andSubscriptionIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("subscription_id >=", value, "subscriptionId");
			return (Criteria) this;
		}

		public Criteria andSubscriptionIdLessThan(Integer value) {
			addCriterion("subscription_id <", value, "subscriptionId");
			return (Criteria) this;
		}

		public Criteria andSubscriptionIdLessThanOrEqualTo(Integer value) {
			addCriterion("subscription_id <=", value, "subscriptionId");
			return (Criteria) this;
		}

		public Criteria andSubscriptionIdIn(List<Integer> values) {
			addCriterion("subscription_id in", values, "subscriptionId");
			return (Criteria) this;
		}

		public Criteria andSubscriptionIdNotIn(List<Integer> values) {
			addCriterion("subscription_id not in", values, "subscriptionId");
			return (Criteria) this;
		}

		public Criteria andSubscriptionIdBetween(Integer value1, Integer value2) {
			addCriterion("subscription_id between", value1, value2, "subscriptionId");
			return (Criteria) this;
		}

		public Criteria andSubscriptionIdNotBetween(Integer value1, Integer value2) {
			addCriterion("subscription_id not between", value1, value2, "subscriptionId");
			return (Criteria) this;
		}

		public Criteria andUserIdIsNull() {
			addCriterion("user_id is null");
			return (Criteria) this;
		}

		public Criteria andUserIdIsNotNull() {
			addCriterion("user_id is not null");
			return (Criteria) this;
		}

		public Criteria andUserIdEqualTo(Integer value) {
			addCriterion("user_id =", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotEqualTo(Integer value) {
			addCriterion("user_id <>", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdGreaterThan(Integer value) {
			addCriterion("user_id >", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("user_id >=", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdLessThan(Integer value) {
			addCriterion("user_id <", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdLessThanOrEqualTo(Integer value) {
			addCriterion("user_id <=", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdIn(List<Integer> values) {
			addCriterion("user_id in", values, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotIn(List<Integer> values) {
			addCriterion("user_id not in", values, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdBetween(Integer value1, Integer value2) {
			addCriterion("user_id between", value1, value2, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotBetween(Integer value1, Integer value2) {
			addCriterion("user_id not between", value1, value2, "userId");
			return (Criteria) this;
		}

		public Criteria andScheduleIdIsNull() {
			addCriterion("schedule_id is null");
			return (Criteria) this;
		}

		public Criteria andScheduleIdIsNotNull() {
			addCriterion("schedule_id is not null");
			return (Criteria) this;
		}

		public Criteria andScheduleIdEqualTo(Integer value) {
			addCriterion("schedule_id =", value, "scheduleId");
			return (Criteria) this;
		}

		public Criteria andScheduleIdNotEqualTo(Integer value) {
			addCriterion("schedule_id <>", value, "scheduleId");
			return (Criteria) this;
		}

		public Criteria andScheduleIdGreaterThan(Integer value) {
			addCriterion("schedule_id >", value, "scheduleId");
			return (Criteria) this;
		}

		public Criteria andScheduleIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("schedule_id >=", value, "scheduleId");
			return (Criteria) this;
		}

		public Criteria andScheduleIdLessThan(Integer value) {
			addCriterion("schedule_id <", value, "scheduleId");
			return (Criteria) this;
		}

		public Criteria andScheduleIdLessThanOrEqualTo(Integer value) {
			addCriterion("schedule_id <=", value, "scheduleId");
			return (Criteria) this;
		}

		public Criteria andScheduleIdIn(List<Integer> values) {
			addCriterion("schedule_id in", values, "scheduleId");
			return (Criteria) this;
		}

		public Criteria andScheduleIdNotIn(List<Integer> values) {
			addCriterion("schedule_id not in", values, "scheduleId");
			return (Criteria) this;
		}

		public Criteria andScheduleIdBetween(Integer value1, Integer value2) {
			addCriterion("schedule_id between", value1, value2, "scheduleId");
			return (Criteria) this;
		}

		public Criteria andScheduleIdNotBetween(Integer value1, Integer value2) {
			addCriterion("schedule_id not between", value1, value2, "scheduleId");
			return (Criteria) this;
		}

		public Criteria andSubscriptionDateIsNull() {
			addCriterion("subscription_date is null");
			return (Criteria) this;
		}

		public Criteria andSubscriptionDateIsNotNull() {
			addCriterion("subscription_date is not null");
			return (Criteria) this;
		}

		public Criteria andSubscriptionDateEqualTo(Date value) {
			addCriterionForJDBCDate("subscription_date =", value, "subscriptionDate");
			return (Criteria) this;
		}

		public Criteria andSubscriptionDateNotEqualTo(Date value) {
			addCriterionForJDBCDate("subscription_date <>", value, "subscriptionDate");
			return (Criteria) this;
		}

		public Criteria andSubscriptionDateGreaterThan(Date value) {
			addCriterionForJDBCDate("subscription_date >", value, "subscriptionDate");
			return (Criteria) this;
		}

		public Criteria andSubscriptionDateGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("subscription_date >=", value, "subscriptionDate");
			return (Criteria) this;
		}

		public Criteria andSubscriptionDateLessThan(Date value) {
			addCriterionForJDBCDate("subscription_date <", value, "subscriptionDate");
			return (Criteria) this;
		}

		public Criteria andSubscriptionDateLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("subscription_date <=", value, "subscriptionDate");
			return (Criteria) this;
		}

		public Criteria andSubscriptionDateIn(List<Date> values) {
			addCriterionForJDBCDate("subscription_date in", values, "subscriptionDate");
			return (Criteria) this;
		}

		public Criteria andSubscriptionDateNotIn(List<Date> values) {
			addCriterionForJDBCDate("subscription_date not in", values, "subscriptionDate");
			return (Criteria) this;
		}

		public Criteria andSubscriptionDateBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("subscription_date between", value1, value2, "subscriptionDate");
			return (Criteria) this;
		}

		public Criteria andSubscriptionDateNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("subscription_date not between", value1, value2, "subscriptionDate");
			return (Criteria) this;
		}

		public Criteria andSubscriptionTimeIsNull() {
			addCriterion("subscription_time is null");
			return (Criteria) this;
		}

		public Criteria andSubscriptionTimeIsNotNull() {
			addCriterion("subscription_time is not null");
			return (Criteria) this;
		}

		public Criteria andSubscriptionTimeEqualTo(Date value) {
			addCriterionForJDBCTime("subscription_time =", value, "subscriptionTime");
			return (Criteria) this;
		}

		public Criteria andSubscriptionTimeNotEqualTo(Date value) {
			addCriterionForJDBCTime("subscription_time <>", value, "subscriptionTime");
			return (Criteria) this;
		}

		public Criteria andSubscriptionTimeGreaterThan(Date value) {
			addCriterionForJDBCTime("subscription_time >", value, "subscriptionTime");
			return (Criteria) this;
		}

		public Criteria andSubscriptionTimeGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCTime("subscription_time >=", value, "subscriptionTime");
			return (Criteria) this;
		}

		public Criteria andSubscriptionTimeLessThan(Date value) {
			addCriterionForJDBCTime("subscription_time <", value, "subscriptionTime");
			return (Criteria) this;
		}

		public Criteria andSubscriptionTimeLessThanOrEqualTo(Date value) {
			addCriterionForJDBCTime("subscription_time <=", value, "subscriptionTime");
			return (Criteria) this;
		}

		public Criteria andSubscriptionTimeIn(List<Date> values) {
			addCriterionForJDBCTime("subscription_time in", values, "subscriptionTime");
			return (Criteria) this;
		}

		public Criteria andSubscriptionTimeNotIn(List<Date> values) {
			addCriterionForJDBCTime("subscription_time not in", values, "subscriptionTime");
			return (Criteria) this;
		}

		public Criteria andSubscriptionTimeBetween(Date value1, Date value2) {
			addCriterionForJDBCTime("subscription_time between", value1, value2, "subscriptionTime");
			return (Criteria) this;
		}

		public Criteria andSubscriptionTimeNotBetween(Date value1, Date value2) {
			addCriterionForJDBCTime("subscription_time not between", value1, value2, "subscriptionTime");
			return (Criteria) this;
		}

		public Criteria andSubscriptionStatusIsNull() {
			addCriterion("subscription_status is null");
			return (Criteria) this;
		}

		public Criteria andSubscriptionStatusIsNotNull() {
			addCriterion("subscription_status is not null");
			return (Criteria) this;
		}

		public Criteria andSubscriptionStatusEqualTo(Integer value) {
			addCriterion("subscription_status =", value, "subscriptionStatus");
			return (Criteria) this;
		}

		public Criteria andSubscriptionStatusNotEqualTo(Integer value) {
			addCriterion("subscription_status <>", value, "subscriptionStatus");
			return (Criteria) this;
		}

		public Criteria andSubscriptionStatusGreaterThan(Integer value) {
			addCriterion("subscription_status >", value, "subscriptionStatus");
			return (Criteria) this;
		}

		public Criteria andSubscriptionStatusGreaterThanOrEqualTo(Integer value) {
			addCriterion("subscription_status >=", value, "subscriptionStatus");
			return (Criteria) this;
		}

		public Criteria andSubscriptionStatusLessThan(Integer value) {
			addCriterion("subscription_status <", value, "subscriptionStatus");
			return (Criteria) this;
		}

		public Criteria andSubscriptionStatusLessThanOrEqualTo(Integer value) {
			addCriterion("subscription_status <=", value, "subscriptionStatus");
			return (Criteria) this;
		}

		public Criteria andSubscriptionStatusIn(List<Integer> values) {
			addCriterion("subscription_status in", values, "subscriptionStatus");
			return (Criteria) this;
		}

		public Criteria andSubscriptionStatusNotIn(List<Integer> values) {
			addCriterion("subscription_status not in", values, "subscriptionStatus");
			return (Criteria) this;
		}

		public Criteria andSubscriptionStatusBetween(Integer value1, Integer value2) {
			addCriterion("subscription_status between", value1, value2, "subscriptionStatus");
			return (Criteria) this;
		}

		public Criteria andSubscriptionStatusNotBetween(Integer value1, Integer value2) {
			addCriterion("subscription_status not between", value1, value2, "subscriptionStatus");
			return (Criteria) this;
		}

		public Criteria andSubscriptionFeeIsNull() {
			addCriterion("subscription_fee is null");
			return (Criteria) this;
		}

		public Criteria andSubscriptionFeeIsNotNull() {
			addCriterion("subscription_fee is not null");
			return (Criteria) this;
		}

		public Criteria andSubscriptionFeeEqualTo(Long value) {
			addCriterion("subscription_fee =", value, "subscriptionFee");
			return (Criteria) this;
		}

		public Criteria andSubscriptionFeeNotEqualTo(Long value) {
			addCriterion("subscription_fee <>", value, "subscriptionFee");
			return (Criteria) this;
		}

		public Criteria andSubscriptionFeeGreaterThan(Long value) {
			addCriterion("subscription_fee >", value, "subscriptionFee");
			return (Criteria) this;
		}

		public Criteria andSubscriptionFeeGreaterThanOrEqualTo(Long value) {
			addCriterion("subscription_fee >=", value, "subscriptionFee");
			return (Criteria) this;
		}

		public Criteria andSubscriptionFeeLessThan(Long value) {
			addCriterion("subscription_fee <", value, "subscriptionFee");
			return (Criteria) this;
		}

		public Criteria andSubscriptionFeeLessThanOrEqualTo(Long value) {
			addCriterion("subscription_fee <=", value, "subscriptionFee");
			return (Criteria) this;
		}

		public Criteria andSubscriptionFeeIn(List<Long> values) {
			addCriterion("subscription_fee in", values, "subscriptionFee");
			return (Criteria) this;
		}

		public Criteria andSubscriptionFeeNotIn(List<Long> values) {
			addCriterion("subscription_fee not in", values, "subscriptionFee");
			return (Criteria) this;
		}

		public Criteria andSubscriptionFeeBetween(Long value1, Long value2) {
			addCriterion("subscription_fee between", value1, value2, "subscriptionFee");
			return (Criteria) this;
		}

		public Criteria andSubscriptionFeeNotBetween(Long value1, Long value2) {
			addCriterion("subscription_fee not between", value1, value2, "subscriptionFee");
			return (Criteria) this;
		}

		public Criteria andPatientNameIsNull() {
			addCriterion("patient_name is null");
			return (Criteria) this;
		}

		public Criteria andPatientNameIsNotNull() {
			addCriterion("patient_name is not null");
			return (Criteria) this;
		}

		public Criteria andPatientNameEqualTo(String value) {
			addCriterion("patient_name =", value, "patientName");
			return (Criteria) this;
		}

		public Criteria andPatientNameNotEqualTo(String value) {
			addCriterion("patient_name <>", value, "patientName");
			return (Criteria) this;
		}

		public Criteria andPatientNameGreaterThan(String value) {
			addCriterion("patient_name >", value, "patientName");
			return (Criteria) this;
		}

		public Criteria andPatientNameGreaterThanOrEqualTo(String value) {
			addCriterion("patient_name >=", value, "patientName");
			return (Criteria) this;
		}

		public Criteria andPatientNameLessThan(String value) {
			addCriterion("patient_name <", value, "patientName");
			return (Criteria) this;
		}

		public Criteria andPatientNameLessThanOrEqualTo(String value) {
			addCriterion("patient_name <=", value, "patientName");
			return (Criteria) this;
		}

		public Criteria andPatientNameLike(String value) {
			addCriterion("patient_name like", value, "patientName");
			return (Criteria) this;
		}

		public Criteria andPatientNameNotLike(String value) {
			addCriterion("patient_name not like", value, "patientName");
			return (Criteria) this;
		}

		public Criteria andPatientNameIn(List<String> values) {
			addCriterion("patient_name in", values, "patientName");
			return (Criteria) this;
		}

		public Criteria andPatientNameNotIn(List<String> values) {
			addCriterion("patient_name not in", values, "patientName");
			return (Criteria) this;
		}

		public Criteria andPatientNameBetween(String value1, String value2) {
			addCriterion("patient_name between", value1, value2, "patientName");
			return (Criteria) this;
		}

		public Criteria andPatientNameNotBetween(String value1, String value2) {
			addCriterion("patient_name not between", value1, value2, "patientName");
			return (Criteria) this;
		}

		public Criteria andPatientBirthdayIsNull() {
			addCriterion("patient_birthday is null");
			return (Criteria) this;
		}

		public Criteria andPatientBirthdayIsNotNull() {
			addCriterion("patient_birthday is not null");
			return (Criteria) this;
		}

		public Criteria andPatientBirthdayEqualTo(Date value) {
			addCriterionForJDBCDate("patient_birthday =", value, "patientBirthday");
			return (Criteria) this;
		}

		public Criteria andPatientBirthdayNotEqualTo(Date value) {
			addCriterionForJDBCDate("patient_birthday <>", value, "patientBirthday");
			return (Criteria) this;
		}

		public Criteria andPatientBirthdayGreaterThan(Date value) {
			addCriterionForJDBCDate("patient_birthday >", value, "patientBirthday");
			return (Criteria) this;
		}

		public Criteria andPatientBirthdayGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("patient_birthday >=", value, "patientBirthday");
			return (Criteria) this;
		}

		public Criteria andPatientBirthdayLessThan(Date value) {
			addCriterionForJDBCDate("patient_birthday <", value, "patientBirthday");
			return (Criteria) this;
		}

		public Criteria andPatientBirthdayLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("patient_birthday <=", value, "patientBirthday");
			return (Criteria) this;
		}

		public Criteria andPatientBirthdayIn(List<Date> values) {
			addCriterionForJDBCDate("patient_birthday in", values, "patientBirthday");
			return (Criteria) this;
		}

		public Criteria andPatientBirthdayNotIn(List<Date> values) {
			addCriterionForJDBCDate("patient_birthday not in", values, "patientBirthday");
			return (Criteria) this;
		}

		public Criteria andPatientBirthdayBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("patient_birthday between", value1, value2, "patientBirthday");
			return (Criteria) this;
		}

		public Criteria andPatientBirthdayNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("patient_birthday not between", value1, value2, "patientBirthday");
			return (Criteria) this;
		}

		public Criteria andPatientSexIsNull() {
			addCriterion("patient_sex is null");
			return (Criteria) this;
		}

		public Criteria andPatientSexIsNotNull() {
			addCriterion("patient_sex is not null");
			return (Criteria) this;
		}

		public Criteria andPatientSexEqualTo(Integer value) {
			addCriterion("patient_sex =", value, "patientSex");
			return (Criteria) this;
		}

		public Criteria andPatientSexNotEqualTo(Integer value) {
			addCriterion("patient_sex <>", value, "patientSex");
			return (Criteria) this;
		}

		public Criteria andPatientSexGreaterThan(Integer value) {
			addCriterion("patient_sex >", value, "patientSex");
			return (Criteria) this;
		}

		public Criteria andPatientSexGreaterThanOrEqualTo(Integer value) {
			addCriterion("patient_sex >=", value, "patientSex");
			return (Criteria) this;
		}

		public Criteria andPatientSexLessThan(Integer value) {
			addCriterion("patient_sex <", value, "patientSex");
			return (Criteria) this;
		}

		public Criteria andPatientSexLessThanOrEqualTo(Integer value) {
			addCriterion("patient_sex <=", value, "patientSex");
			return (Criteria) this;
		}

		public Criteria andPatientSexIn(List<Integer> values) {
			addCriterion("patient_sex in", values, "patientSex");
			return (Criteria) this;
		}

		public Criteria andPatientSexNotIn(List<Integer> values) {
			addCriterion("patient_sex not in", values, "patientSex");
			return (Criteria) this;
		}

		public Criteria andPatientSexBetween(Integer value1, Integer value2) {
			addCriterion("patient_sex between", value1, value2, "patientSex");
			return (Criteria) this;
		}

		public Criteria andPatientSexNotBetween(Integer value1, Integer value2) {
			addCriterion("patient_sex not between", value1, value2, "patientSex");
			return (Criteria) this;
		}

		public Criteria andPatientPhoneIsNull() {
			addCriterion("patient_phone is null");
			return (Criteria) this;
		}

		public Criteria andPatientPhoneIsNotNull() {
			addCriterion("patient_phone is not null");
			return (Criteria) this;
		}

		public Criteria andPatientPhoneEqualTo(String value) {
			addCriterion("patient_phone =", value, "patientPhone");
			return (Criteria) this;
		}

		public Criteria andPatientPhoneNotEqualTo(String value) {
			addCriterion("patient_phone <>", value, "patientPhone");
			return (Criteria) this;
		}

		public Criteria andPatientPhoneGreaterThan(String value) {
			addCriterion("patient_phone >", value, "patientPhone");
			return (Criteria) this;
		}

		public Criteria andPatientPhoneGreaterThanOrEqualTo(String value) {
			addCriterion("patient_phone >=", value, "patientPhone");
			return (Criteria) this;
		}

		public Criteria andPatientPhoneLessThan(String value) {
			addCriterion("patient_phone <", value, "patientPhone");
			return (Criteria) this;
		}

		public Criteria andPatientPhoneLessThanOrEqualTo(String value) {
			addCriterion("patient_phone <=", value, "patientPhone");
			return (Criteria) this;
		}

		public Criteria andPatientPhoneLike(String value) {
			addCriterion("patient_phone like", value, "patientPhone");
			return (Criteria) this;
		}

		public Criteria andPatientPhoneNotLike(String value) {
			addCriterion("patient_phone not like", value, "patientPhone");
			return (Criteria) this;
		}

		public Criteria andPatientPhoneIn(List<String> values) {
			addCriterion("patient_phone in", values, "patientPhone");
			return (Criteria) this;
		}

		public Criteria andPatientPhoneNotIn(List<String> values) {
			addCriterion("patient_phone not in", values, "patientPhone");
			return (Criteria) this;
		}

		public Criteria andPatientPhoneBetween(String value1, String value2) {
			addCriterion("patient_phone between", value1, value2, "patientPhone");
			return (Criteria) this;
		}

		public Criteria andPatientPhoneNotBetween(String value1, String value2) {
			addCriterion("patient_phone not between", value1, value2, "patientPhone");
			return (Criteria) this;
		}

		public Criteria andCreateTimeIsNull() {
			addCriterion("create_time is null");
			return (Criteria) this;
		}

		public Criteria andCreateTimeIsNotNull() {
			addCriterion("create_time is not null");
			return (Criteria) this;
		}

		public Criteria andCreateTimeEqualTo(Date value) {
			addCriterion("create_time =", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeNotEqualTo(Date value) {
			addCriterion("create_time <>", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeGreaterThan(Date value) {
			addCriterion("create_time >", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("create_time >=", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeLessThan(Date value) {
			addCriterion("create_time <", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
			addCriterion("create_time <=", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeIn(List<Date> values) {
			addCriterion("create_time in", values, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeNotIn(List<Date> values) {
			addCriterion("create_time not in", values, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeBetween(Date value1, Date value2) {
			addCriterion("create_time between", value1, value2, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
			addCriterion("create_time not between", value1, value2, "createTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeIsNull() {
			addCriterion("update_time is null");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeIsNotNull() {
			addCriterion("update_time is not null");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeEqualTo(Date value) {
			addCriterion("update_time =", value, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeNotEqualTo(Date value) {
			addCriterion("update_time <>", value, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeGreaterThan(Date value) {
			addCriterion("update_time >", value, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("update_time >=", value, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeLessThan(Date value) {
			addCriterion("update_time <", value, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeLessThanOrEqualTo(Date value) {
			addCriterion("update_time <=", value, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeIn(List<Date> values) {
			addCriterion("update_time in", values, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeNotIn(List<Date> values) {
			addCriterion("update_time not in", values, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeBetween(Date value1, Date value2) {
			addCriterion("update_time between", value1, value2, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeNotBetween(Date value1, Date value2) {
			addCriterion("update_time not between", value1, value2, "updateTime");
			return (Criteria) this;
		}

		public Criteria andPatientNameLikeInsensitive(String value) {
			addCriterion("upper(patient_name) like", value.toUpperCase(), "patientName");
			return (Criteria) this;
		}

		public Criteria andPatientPhoneLikeInsensitive(String value) {
			addCriterion("upper(patient_phone) like", value.toUpperCase(), "patientPhone");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table t_subscription
	 * @mbg.generated
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_subscription
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}